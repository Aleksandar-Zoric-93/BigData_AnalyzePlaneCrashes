length(which(allCrashesInvolvingDouglas$Location=="Canada")),
length(which(allCrashesInvolvingDouglas$Location=="Canada")),
length(which(allCrashesInvolvingDouglas$Location=="Colombia")),
length(which(allCrashesInvolvingDouglas$Location=="Russia")),
length(which(allCrashesInvolvingDouglas$Location=="Alaska")),
length(which(allCrashesInvolvingDouglas$Location=="Brazil")))
#Labels for the pie chart of the top 10 crash locations overall
lblsForLocationOverall <- c(top10CrashLocationOverall)
#Create pie chart which is colour cordinated to display top 10 crash locations overall
pie(slicesLocationOverall, labels = lblsForLocationOverall,col=rainbow(length(lbls)), main="Top 10 Locations of Plane Crashes Overall")
slicesAsChrLocationOverall <- as.character(slicesLocationOverall)
#Legend to display the number of crashes in each location
legend("bottomleft", inset=.02, title="No# of Crashes Overall",
c(slicesAsChrLocationOverall), fill=topo.colors(10), cex=0.8)
#New Section______________________________________________________________________________________________
#Plot the two pie charts side by side to compare
par(mfrow = c(1,2))
pie(slicesLocation, labels = lblsForLocation,col=rainbow(length(lbls)), main="Top 10 Locations Douglas planes have Crashed")
pie(slicesLocationOverall, labels = lblsForLocationOverall,col=rainbow(length(lbls)), main="Top 10 Locations of Plane Crashes Overall")
plotAboardvsFatalitiesDouglas
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed")
cols = c("aquamarine","blue", "brown", "burlywoodv,"darkcyan"","cyan","chocolate","coral", "chartreuse", "cadetblue")
cols = c("aquamarine","blue", "brown", "burlywoodv","darkcyan","cyan","chocolate","coral", "chartreuse", "cadetblue")
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed")
planesWhichCrashedTheMost <- tail(names(sort(table(allCrashesInvolvingDouglas$Type))), 10)
slices <- c(length(which(allCrashesInvolvingDouglas$Type=="Douglas DC-3A")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas DC-3C")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas DC-6")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas C-47-DL")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas DC-6B")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas C-47B")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas DC-4")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas C-47")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas C-47A")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas DC-3")))
lbls <- c(planesWhichCrashedTheMost)
cols = c("aquamarine","blue", "brown", "burlywoodv","darkcyan","cyan","chocolate","coral", "chartreuse", "cadetblue")
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed")
cols=as.numeric(unique(factor(lbls)))
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed")
slicesAsChr <- as.character(slices)
legend("bottomright", legend=levels(factor(lbls)), inset=.02, title="Number of Crashes",
fill=topo.colors(10), cex=0.8)
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed")
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed")
legend("bottomright", legend=levels(factor(lbls)), inset=.02, title="Number of Crashes",
cex=0.8)
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed")
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed")
legend("bottomright", legend=levels(factor(lbls)), inset=.02, title="Number of Crashes",
col=as.numeric(unique(factor(lbls))),cex=0.8)
pie(slices, labels = lbls,col=factor(lbls), main="Top 10 Douglas Planes that Crashed")
legend("bottomright", legend=levels(factor(lbls)), inset=.02, title="Number of Crashes",
col=as.numeric(unique(factor(lbls))),cex=0.8)
cols = c("aquamarine","blue", "brown", "burlywoodv","darkcyan","cyan","chocolate","coral", "chartreuse", "cadetblue")
pie(slices, labels = lbls,col=cols[lbls], main="Top 10 Douglas Planes that Crashed")
legend("bottomright", legend=levels(factor(lbls)), inset=.02, title="Number of Crashes",
col=cols,cex=0.8)
cols = c("aquamarine","blue", "brown", "burlywoodv","darkcyan","cyan","chocolate","coral", "chartreuse", "cadetblue")
pie(slices, labels = lbls,col=cols[lbls], main="Top 10 Douglas Planes that Crashed")
cols=c('dodgerblue', 'plum')
pie(slices, labels = lbls,col=cols[lbls], main="Top 10 Douglas Planes that Crashed")
cols = c("aquamarine","blue", "brown", "burlywoodv","darkcyan","cyan","chocolate","coral", "chartreuse", "cadetblue")
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed")
cols = c("black","blue", "brown", "red","darkcyan","cyan","chocolate","coral", "chartreuse", "cadetblue")
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed")
legend("bottomright", legend=levels(factor(lbls)), inset=.02, title="Number of Crashes",
col=cols,cex=0.8)
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed")
legend("bottomright", inset=.02, title="Number of Crashes",
col=cols,cex=0.8)
legend("bottomleft", inset=.02, title="No# of Crashes",
c(slicesAsChr), fill=topo.colors(10), cex=0.8)
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed")
legend("bottomleft", sort(unique(lbls)),inset=.02, title="No# of Crashes",
col = cols,cex=0.8)
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed")
legend("bottomleft", sort(unique(lbls)),inset=.02, title="No# of Crashes",
col = cols,cex=0.8, pch = 19)
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed")
slicesAsChr <- as.character(slices)
legend("bottomleft", sort(unique(lbls)),inset=.02, title="No# of Crashes",
c(slicesAsChrLocationOverall),col = cols,cex=0.8, pch = 19)
planesWhichCrashedTheMost <- tail(names(sort(table(allCrashesInvolvingDouglas$Type))), 10)
#Create slices for the pie chart which consists of the number the 10 Douglas planes have crashed
slices <- c(length(which(allCrashesInvolvingDouglas$Type=="Douglas DC-3A")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas DC-3C")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas DC-6")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas C-47-DL")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas DC-6B")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas C-47B")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas DC-4")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas C-47")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas C-47A")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas DC-3")))
#Create labels for the pie chart which consists of the name of each of the top 10 Douglas planes that crashed
lbls <- c(planesWhichCrashedTheMost)
#
cols = c("black","blue", "brown", "red","darkcyan","cyan","chocolate","coral", "chartreuse", "cadetblue")
#cols=as.numeric(unique(factor(lbls)))
#And finally, graph a pie chart with the above values and apply some extra features so that it is
#displayed in a neater manner
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed")
slicesAsChr <- as.character(slices)
#Legend to display the number of crashes per plane type
legend("bottomleft", sort(unique(lbls)),inset=.02, title="No# of Crashes",
c(slicesAsChrLocationOverall),col = cols,cex=0.8, pch = 19)
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed",radius = 0.8)
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed",radius = 1.5)
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed",radius = 0.5)
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed",radius = 0.7)
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed",radius = 0.6)
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed",radius = 0.5)
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed",radius = 0.9)
pie(slicesLocation, labels = lblsForLocation,col=rainbow(length(lbls)), main="Top 10 Locations Douglas planes have Crashed")
dev.off
dev.off()
dev.off()
dev.off()
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed",radius = 0.9)
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed",radius = 0.8)
slicesAsChr <- as.character(slices)
legend("bottomleft", sort(unique(lbls)),inset=.02, title="No# of Crashes",
c(slicesAsChrLocationOverall),col = cols,cex=0.8, pch = 19)
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed",radius = 0.8)
legend("bottomleft", sort(unique(lbls)),inset=.02, title="No# of Crashes",legend=sapply(pielabels, as.expression),
fill=Cols,c(slicesAsChrLocationOverall),cex=0.8, pch = 19)
legend("bottomleft", sort(unique(lbls)),inset=.02, title="No# of Crashes",legend=sapply(lbls, as.expression),
fill=Cols,c(slicesAsChrLocationOverall),cex=0.8, pch = 19)
slices <- c(length(which(allCrashesInvolvingDouglas$Type=="Douglas DC-3A")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas DC-3C")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas DC-6")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas C-47-DL")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas DC-6B")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas C-47B")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas DC-4")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas C-47")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas C-47A")),
length(which(allCrashesInvolvingDouglas$Type=="Douglas DC-3")))
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed",radius = 0.8)
legend("bottomleft", sort(unique(lbls)),inset=.02, title="No# of Crashes",legend=sapply(lbls, as.expression),
fill=cols,c(slicesAsChrLocationOverall),cex=0.8, pch = 19)
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed",radius = 0.8)
legend("bottomleft", sort(unique(lbls)),inset=.02, title="No# of Crashes",legend=sapply(lbls, as.expression),
fill=cols,c(slicesAsChr),cex=0.8, pch = 19)
pie(slices, labels = lbls,col=cols, main="Top 10 Douglas Planes that Crashed",radius = 0.8)
legend("bottomleft", sort(unique(lbls)),inset=.02, title="No# of Crashes",
fill=cols,c(slicesAsChr),cex=0.8, pch = 19)
top10LocationsOfDouglasCrashes <- tail(names(sort(table(allCrashesInvolvingDouglas$Location))), 10)
slicesLocation <- c(length(which(allCrashesInvolvingDouglas$Location=="Mexico")),
length(which(allCrashesInvolvingDouglas$Location=="Alaska")),
length(which(allCrashesInvolvingDouglas$Location=="France")),
length(which(allCrashesInvolvingDouglas$Location=="California")),
length(which(allCrashesInvolvingDouglas$Location=="Philippines")),
length(which(allCrashesInvolvingDouglas$Location=="China")),
length(which(allCrashesInvolvingDouglas$Location=="Canada")),
length(which(allCrashesInvolvingDouglas$Location=="Brazil")),
length(which(allCrashesInvolvingDouglas$Location=="India")),
length(which(allCrashesInvolvingDouglas$Location=="India")),
length(which(allCrashesInvolvingDouglas$Location=="Colombia")))
lblsForLocation <- c(top10LocationsOfDouglasCrashes)
pie(slicesLocation, labels = lblsForLocation,col=cols, main="Top 10 Locations Douglas planes have Crashed",radius = 0.8)
slicesAsChrLocation <- as.character(slicesLocation)
legend("bottomleft", sort(unique(lbls)),inset=.02, title="No# of Crashes",
fill=cols,c(slicesAsChrLocation),cex=0.8, pch = 19)
pie(slicesLocation, labels = lblsForLocation,col=cols, main="Top 10 Locations Douglas planes have Crashed",radius = 0.8)
slicesAsChrLocation <- as.character(slicesLocation)
legend("bottomleft", sort(unique(lbls)),inset=.02, title="No# of Crashes",
fill=cols,c(slicesAsChrLocation),cex=0.8, pch = 19)
top10CrashLocationOverall <- tail(names(sort(table(Airplane_Crashes_and_Fatalities_Since_1908$Location))), 10)
slicesLocationOverall <- c(length(which(allCrashesInvolvingDouglas$Location=="China")),
length(which(allCrashesInvolvingDouglas$Location=="India")),
length(which(allCrashesInvolvingDouglas$Location=="England")),
length(which(allCrashesInvolvingDouglas$Location=="France")),
length(which(allCrashesInvolvingDouglas$Location=="California")),
length(which(allCrashesInvolvingDouglas$Location=="Canada")),
length(which(allCrashesInvolvingDouglas$Location=="Canada")),
length(which(allCrashesInvolvingDouglas$Location=="Colombia")),
length(which(allCrashesInvolvingDouglas$Location=="Russia")),
length(which(allCrashesInvolvingDouglas$Location=="Alaska")),
length(which(allCrashesInvolvingDouglas$Location=="Brazil")))
lblsForLocationOverall <- c(top10CrashLocationOverall)
pie(slicesLocationOverall, labels = lblsForLocationOverall,col=cols, main="Top 10 Locations of Plane Crashes Overall",radius = 0.8)
o
slicesAsChrLocationOverall <- as.character(slicesLocationOverall)
legend("bottomleft", sort(unique(lbls)),inset=.02, title="No# of Crashes Overall",
fill=cols,c(slicesAsChrLocationOverall),cex=0.8, pch = 19)
par(mfrow = c(1,2))
pie(slicesLocation, labels = lblsForLocation,col=rainbow(length(lbls)), main="Top 10 Locations Douglas planes have Crashed",radius = 0.8)
pie(slicesLocation, labels = lblsForLocation,col=cols, main="Top 10 Locations Douglas planes have Crashed",radius = 0.8)
par(mfrow = c(1,2))
pie(slicesLocation, labels = lblsForLocation,col=cols, main="Top 10 Locations Douglas planes have Crashed",radius = 0.8)
pie(slicesLocationOverall, labels = lblsForLocationOverall,col=cols, main="Top 10 Locations of Plane Crashes Overall",radius = 0.8)
View(Airplane_Crashes_and_Fatalities_Since_1908)
View(allCrashesInvolvingDouglas)
test <- tail(names(sort(table(allCrashesInvolvingDouglas$Date))), 10)
test
rm(test)
test
Top10DatesWhenCrashesOccuredMost <- tail(names(sort(table(allCrashesInvolvingDouglas$Date))), 10)
Top10DatesWhenCrashesOccuredMost
test <- c(length(which(allCrashesInvolvingDouglas$Date=="12/08/1950")))
test
c(length(which(allCrashesInvolvingDouglas$Date=="12/12/1949")))
c(length(which(allCrashesInvolvingDouglas$Date=="12/21/1948")))
c(length(which(test)))
slicesLocationOverall
c(length(which(allCrashesInvolvingDouglas$Date=="12/21/1948")))
c(length(which(allCrashesInvolvingDouglas$Date=="12/21/1941")))
c(length(which(allCrashesInvolvingDouglas$Date=="12/21/1945")))
c(length(which(allCrashesInvolvingDouglas$Date=="12/21/1947")))
c(length(which(allCrashesInvolvingDouglas$Date=="12/21/1948")))
rm(test)
barplot(Top10DatesWhenCrashesOccuredMost, main="Car Distribution",
xlab="Number of Gears")
c(length(which(allCrashesInvolvingDouglas$Fatalities=="12/21/1948")))
c(length(which(allCrashesInvolvingDouglas$Fatalities=="12/21/1944")))
c(length(which(allCrashesInvolvingDouglas$Fatalities=="12/21/1954")))
c(length(which(allCrashesInvolvingDouglas$Fatalities=="2")))
c(length(which(allCrashesInvolvingDouglas$Fatalities=="6")))
tail(names(sort(table(allCrashesInvolvingDouglas$Fatalities))), 10)
tail(names(sort(table(allCrashesInvolvingDouglas$Aboard))), 10)
c(length(which(allCrashesInvolvingDouglas$Fatalities==5)))
c(length(which(allCrashesInvolvingDouglas$Fatalities=="5")))
c(length(which(allCrashesInvolvingDouglas$Fatalities==1)))
c(length(which(allCrashesInvolvingDouglas$Fatalities==646)))
c(length(which(allCrashesInvolvingDouglas$Fatalities==64)))
c(length(which(allCrashesInvolvingDouglas$Fatalities==34)))
tail(names(sort(table(allCrashesInvolvingDouglas$Aboard))), 10)
tail(names(sort(table(allCrashesInvolvingDouglas$DeathRatePercentage))), 10)
c(length(which(allCrashesInvolvingDouglas$DeathRatePercentage==4)))
c(length(which(allCrashesInvolvingDouglas$DeathRatePercentage==4.00)))
c(length(which(allCrashesInvolvingDouglas$DeathRatePercentage=='4.00')))
c(length(which(allCrashesInvolvingDouglas$DeathRatePercentage=="4.00")))
c(length(which(allCrashesInvolvingDouglas$DeathRatePercentage==50)))
c(length(which(allCrashesInvolvingDouglas$DeathRatePercentage==50.00)))
c(length(which(allCrashesInvolvingDouglas$Fatalities==50.00)))
c(length(which(allCrashesInvolvingDouglas$Fatalities==50)))
c(length(which(allCrashesInvolvingDouglas$Fatalities==54)))
c(length(which(allCrashesInvolvingDouglas$Fatalities==24)))
c(length(which(allCrashesInvolvingDouglas$Fatalities==22)))
tail(names(sort(table(allCrashesInvolvingDouglas$Fatalities))), 10)
tail(names(sort(table(allCrashesInvolvingDouglas$Fatalities))), 1)
tail(names(sort(table(allCrashesInvolvingDouglas$Fatalities))), 100)
tail(names(sort(table(allCrashesInvolvingDouglas$Fatalities))), 10)
allCrashesInvolvingDouglas[which.min(allCrashesInvolvingDouglas[,4]),2]
allCrashesInvolvingDouglas[which.min(allCrashesInvolvingDouglas[,3]),2]
allCrashesInvolvingDouglas[which.min(allCrashesInvolvingDouglas[,8]),9]
allCrashesInvolvingDouglas[which(allCrashesInvolvingDouglas[,8]),9]
allCrashesInvolvingDouglas[allCrashesInvolvingDouglas$Fatalities == 4, "Date"]
allCrashesInvolvingDouglas[allCrashesInvolvingDouglas$Fatalities == 50, "Date"]
View(accidentOccurencesByManufacturerFunction)
View(accidentOccurencesByManufacturerFunction)
viewonWhichDatesFatalitiesOccured <- function(fatalitiesAmount){allCrashesInvolvingDouglas[allCrashesInvolvingDouglas$Fatalities == fatalitiesAmount, "Date"]}
viewonWhichDatesFatalitiesOccured
viewonWhichDatesFatalitiesOccured()
viewonWhichDatesFatalitiesOccured(50)
rm(Top10DatesWhenCrashesOccuredMost)
tail(names(sort(table(allCrashesInvolvingDouglas$Fatalities))), 10)
tail(names(table(allCrashesInvolvingDouglas$Fatalities)), 10)
c(length(which(allCrashesInvolvingDouglas$Fatalities==129)))
c(length(which(allCrashesInvolvingDouglas$Fatalities==128)))
c(length(which(allCrashesInvolvingDouglas$Fatalities==90)))
c(length(which(allCrashesInvolvingDouglas$Fatalities==80)))
tail(names(table(allCrashesInvolvingDouglas$Date)), 10)
tail(names(sort(table(allCrashesInvolvingDouglas$Date)), 10)
)
tail(names(sort(table(allCrashesInvolvingDouglas$Date))), 10)
c(length(which(allCrashesInvolvingDouglas$Fatalities=="12/21/1950")))
c(length(which(allCrashesInvolvingDouglas$Fatalities=="12/08/1950")))
tail(names(table(allCrashesInvolvingDouglas$Date)), 10)
c(length(which(allCrashesInvolvingDouglas$Fatalities=="12/30/1950")))
c(length(which(allCrashesInvolvingDouglas$Fatalities=="12/30/1957")))
crash_per_year = ggplot(Airplane_Crashes_and_Fatalities_Since_1908, aes(Date)) +
geom_histogram(binwidth=1000, fill="lightblue", col="black") +
scale_x_date() + xlab("Year") +
ylab("Crashes") + ggtitle("Planes crashed per year")
crash_per_year
write.csv(Airplane_Crashes_and_Fatalities_Since_1908, "dataset7.csv")
Airplane_Crashes_and_Fatalities_Since_1908$Date = as.Date(Air$Date, format = "%d/%m/%Y")
Airplane_Crashes_and_Fatalities_Since_1908$Date = as.Date(Airplane_Crashes_and_Fatalities_Since_1908$Date, format = "%d/%m/%Y")
View(Airplane_Crashes_and_Fatalities_Since_1908)
library(readr)
Airplane_Crashes_and_Fatalities_Since_1908 <- read_csv("C:/Users/Aleks/Desktop/Big Data/Airplane_Crashes_and_Fatalities_Since_1908.csv")
View(Airplane_Crashes_and_Fatalities_Since_1908)
rm(x)
rm(x1)
rm(X1)
Airplane_Crashes_and_Fatalities_Since_1908$'X1' <- NULL
install.packages("caret")
library(caret)
corpus = VCorpus(VectorSource(Airplane_Crashes_and_Fatalities_Since_1908$Summary))
corpus = tm_map(corpus, tolower)
corpus = tm_map(corpus, PlainTextDocument)
corpus = tm_map(corpus, removePunctuation)
corpus = tm_map(corpus, removeWords, stopwords("english"))
dtm = DocumentTermMatrix(corpus)
dtm = removeSparseTerms(dtm, 0.95)
#inspect(dtm[1:10, 501:510])
freq_terms = findFreqTerms(dtm,100)
print('100 most frequent terms:')
for( i in freq_terms)
cat(i, " ")
install.packages("tm")
library(tm)
corpus = VCorpus(VectorSource(Airplane_Crashes_and_Fatalities_Since_1908$Summary))
corpus = tm_map(corpus, tolower)
corpus = tm_map(corpus, PlainTextDocument)
corpus = tm_map(corpus, removePunctuation)
corpus = tm_map(corpus, removeWords, stopwords("english"))
dtm = DocumentTermMatrix(corpus)
dtm = removeSparseTerms(dtm, 0.95)
#inspect(dtm[1:10, 501:510])
freq_terms = findFreqTerms(dtm,100)
print('100 most frequent terms:')
for( i in freq_terms)
cat(i, " ")
rm(crash_per_year)
corpus = VCorpus(VectorSource(Airplane_Crashes_and_Fatalities_Since_1908$Summary))
corpus = tm_map(corpus, tolower)
corpus = tm_map(corpus, PlainTextDocument)
corpus = tm_map(corpus, removePunctuation)
corpus = tm_map(corpus, removeWords, stopwords("english"))
docTermMatrix = DocumentTermMatrix(corpus)
docTermMatrix = removeSparseTerms(dtm, 0.95)
#inspect(docTermMatrix[1:10, 501:510])
freq_terms = findFreqTerms(docTermMatrix,50)
print('100 most frequent terms:')
for( i in freq_terms)
cat(i, " ")
rm(dtm)
corpus = VCorpus(VectorSource(Airplane_Crashes_and_Fatalities_Since_1908$Summary))
corpus = tm_map(corpus, tolower)
corpus = tm_map(corpus, PlainTextDocument)
corpus = tm_map(corpus, removePunctuation)
corpus = tm_map(corpus, removeWords, stopwords("english"))
docTermMatrix = DocumentTermMatrix(corpus)
docTermMatrix = removeSparseTerms(dtm, 0.95)
#inspect(docTermMatrix[1:10, 501:510])
freq_terms = findFreqTerms(docTermMatrix,50)
print('100 most frequent terms:')
for( i in freq_terms)
cat(i, " ")
corpus = VCorpus(VectorSource(Airplane_Crashes_and_Fatalities_Since_1908$Summary))
corpus = tm_map(corpus, tolower)
corpus = tm_map(corpus, PlainTextDocument)
corpus = tm_map(corpus, removePunctuation)
corpus = tm_map(corpus, removeWords, stopwords("english"))
docTermMatrix = DocumentTermMatrix(corpus)
docTermMatrix = removeSparseTerms(docTermMatrix, 0.95)
#inspect(docTermMatrix[1:10, 501:510])
freq_terms = findFreqTerms(docTermMatrix,50)
print('100 most frequent terms:')
for( i in freq_terms)
cat(i, " ")
corpus = VCorpus(VectorSource(Airplane_Crashes_and_Fatalities_Since_1908$Summary))
corpus = tm_map(corpus, tolower)
corpus = tm_map(corpus, PlainTextDocument)
corpus = tm_map(corpus, removePunctuation)
corpus = tm_map(corpus, removeWords, stopwords("english"))
docTermMatrix = DocumentTermMatrix(corpus)
docTermMatrix = removeSparseTerms(docTermMatrix, 0.95)
frequentTerms = findFreqTerms(docTermMatrix,50)
print('100 most frequent terms:')
for( i in frequentTerms)
cat(i, " ")
docTermMatrix = removeSparseTerms(dtm, 0.95)
corpus = VCorpus(VectorSource(Airplane_Crashes_and_Fatalities_Since_1908$Summary))
corpus = tm_map(corpus, tolower)
corpus = tm_map(corpus, PlainTextDocument)
corpus = tm_map(corpus, removePunctuation)
corpus = tm_map(corpus, removeWords, stopwords("english"))
docTermMatrix = DocumentTermMatrix(corpus)
docTermMatrix = removeSparseTerms(docTermMatrix, 0.95)
frequentTerms = findFreqTerms(docTermMatrix,50)
print('100 most frequent terms:')
for( i in frequentTerms)
cat(i, " ")
corpus = VCorpus(VectorSource(Airplane_Crashes_and_Fatalities_Since_1908$Summary))
corpus = tm_map(corpus, tolower)
corpus = tm_map(corpus, PlainTextDocument)
corpus = tm_map(corpus, removePunctuation)
corpus = tm_map(corpus, removeWords, stopwords("english"))
docTermMatrix = DocumentTermMatrix(corpus)
docTermMatrix = removeSparseTerms(docTermMatrix, 0.95)
frequentTerms = findFreqTerms(docTermMatrix,50)
print('100 most frequent terms:')
for( i in frequentTerms)
list(i, " ")
corpus = VCorpus(VectorSource(Airplane_Crashes_and_Fatalities_Since_1908$Summary))
corpus = tm_map(corpus, tolower)
corpus = tm_map(corpus, PlainTextDocument)
corpus = tm_map(corpus, removePunctuation)
corpus = tm_map(corpus, removeWords, stopwords("english"))
docTermMatrix = DocumentTermMatrix(corpus)
docTermMatrix = removeSparseTerms(docTermMatrix, 0.95)
frequentTerms = findFreqTerms(docTermMatrix,50)
print('100 most frequent terms:')
for( i in frequentTerms)
print(list(i, " "))
corpus = VCorpus(VectorSource(Airplane_Crashes_and_Fatalities_Since_1908$Summary))
corpus = tm_map(corpus, tolower)
corpus = tm_map(corpus, PlainTextDocument)
corpus = tm_map(corpus, removePunctuation)
corpus = tm_map(corpus, removeWords, stopwords("english"))
docTermMatrix = DocumentTermMatrix(corpus)
docTermMatrix = removeSparseTerms(docTermMatrix, 0.95)
frequentTerms = findFreqTerms(docTermMatrix,50)
print('100 most frequent terms:')
for( i in frequentTerms)
cat(i, " ")
freq <- colSums(as.matrix(dtm))
freq <-
freq %>%
data.frame(term = names(freq), frequency = freq) %>%
select(term, frequency) %>%
arrange(desc(frequency))
freq <- colSums(as.matrix(docTermMatrix))
freq <-
freq %>%
data.frame(term = names(freq), frequency = freq) %>%
select(term, frequency) %>%
arrange(desc(frequency))
install.packages("SnowballC")
install.packages("wordcloud")
library(SnowballC)
library(wordcloud)
library(SnowballC)
library(wordcloud)
wordcloud(corpus, max.words = 100, random.order = FALSE)
dev.off()
dev.off()
wordcloud(corpus, max.words = 100, random.order = FALSE)
wordcloud(corpus, max.words = 50, random.order = FALSE)
corpus = VCorpus(VectorSource(Airplane_Crashes_and_Fatalities_Since_1908$Summary))
corpus = tm_map(corpus, tolower)
corpus = tm_map(corpus, PlainTextDocument)
corpus = tm_map(corpus, removePunctuation)
corpus = tm_map(corpus, removeWords, stopwords("english"))
docTermMatrix = DocumentTermMatrix(corpus)
docTermMatrix = removeSparseTerms(docTermMatrix, 0.95)
#Gather the top 50 most frequently used terms and store it in a variable to use later
frequentTerms = findFreqTerms(docTermMatrix,50)
#Print the terms via a for loop
print('50 most frequently used terms:')
for( i in frequentTerms)
cat(i, " ")
#Create a corpus of the summary column and execute some functions to do some text clean up
#i.e. putting all words to lower case, converting it to a plain text document etc.
corpusDouglas = VCorpus(VectorSource(allCrashesInvolvingDouglas$Summary))
corpusDouglas = tm_map(corpusDouglas, tolower)
corpusDouglas = tm_map(corpusDouglas, PlainTextDocument)
corpusDouglas = tm_map(corpusDouglas, removePunctuation)
corpusDouglas = tm_map(corpusDouglas, removeWords, stopwords("english"))
docTermMatrixDouglas = DocumentTermMatrix(corpusDouglas)
docTermMatrixDouglas = removeSparseTerms(docTermMatrixDouglas, 0.95)
#Gather the top 50 most frequently used terms and store it in a variable to use later
frequentTermsDouglas = findFreqTerms(docTermMatrixDouglas,50)
#Print the terms via a for loop
print('50 most frequently used terms:')
for( i in frequentTermsDouglas)
cat(i, " ")
#Create a corpus of the summary column and execute some functions to do some text clean up
#i.e. putting all words to lower case, converting it to a plain text document etc.
corpusDouglas = VCorpus(VectorSource(allCrashesInvolvingDouglas$Summary))
corpusDouglas = tm_map(corpusDouglas, tolower)
corpusDouglas = tm_map(corpusDouglas, PlainTextDocument)
corpusDouglas = tm_map(corpusDouglas, removePunctuation)
corpusDouglas = tm_map(corpusDouglas, removeWords, stopwords("english"))
docTermMatrixDouglas = DocumentTermMatrix(corpusDouglas)
docTermMatrixDouglas = removeSparseTerms(docTermMatrixDouglas, 0.95)
#Gather the top 50 most frequently used terms and store it in a variable to use later
frequentTermsDouglas = findFreqTerms(docTermMatrixDouglas,50)
#Print the terms via a for loop
print('50 most frequently used terms in Douglas crashes:')
for( i in frequentTermsDouglas)
cat(i, " ")
wordcloud(corpus, max.words = 50, random.order = FALSE, main="Crashes Overall")
text(x=0.5, y=0.5, "Wordcloud for Crashes overall")
wordcloud(corpus, max.words = 50, random.order = FALSE, main="Title")
#Graph a word cloud using the terms I found above
plot.new()
text(x=0.5, y=0.5, "Wordcloud for Crashes overall")
wordcloud(corpus, max.words = 50, random.order = FALSE, main="Title")
wordcloud(corpus, max.words = 50, random.order = FALSE)
wordcloud(corpusDouglas, max.words = 50, random.order = FALSE)
par(mfrow = c(1,2))
wordcloud(corpus, max.words = 50, random.order = FALSE)
wordcloud(corpusDouglas, max.words = 50, random.order = FALSE)
wordcloud(corpusDouglas, max.words = 50, random.order = FALSE)
dev.off()
dev.off()
wordcloud(corpusDouglas, max.words = 50, random.order = FALSE)
wordcloud(corpusDouglas, max.words = 50, random.order = FALSE)
par(mfrow = c(1,2))
wordcloud(corpus, max.words = 50, random.order = FALSE)
wordcloud(corpusDouglas, max.words = 50, random.order = FALSE)
rm(freq_terms)
corpus = VCorpus(VectorSource(Airplane_Crashes_and_Fatalities_Since_1908$Summary))
corpus = tm_map(corpus, tolower)
corpus = tm_map(corpus, PlainTextDocument)
corpus = tm_map(corpus, removePunctuation)
corpus = tm_map(corpus, removeWords, stopwords("english"))
docTermMatrix = DocumentTermMatrix(corpus)
docTermMatrix = removeSparseTerms(docTermMatrix, 0.95)
#Gather the top 50 most frequently used terms and store it in a variable to use later
frequentTerms = findFreqTerms(docTermMatrix,50)
#Print the terms via a for loop
print('50 most frequently used terms:')
for( i in frequentTerms)
cat(i, " ")
save.image("C:/Users/Aleks/Desktop/Big Data/AirplaneCrashesWorkspace.RData")
